name: "Build and Push Docker Image with OIDC"
on: push

permissions:
  id-token: write
  contents: read

env:
  # Define variables for your Docker image and Artifactory repo
  ARTIFACTORY_DOCKER_REPO: "docker-local" # Your target Docker repo in Artifactory
  DOCKER_IMAGE_NAME: ${{ github.repository }} # e.g., my-org/my-app
  DOCKER_IMAGE_TAG: ${{ github.sha }} # Use the commit SHA for a unique tag

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. Setup JFrog CLI and authenticate via OIDC
      - name: Setup JFrog CLI
        id: setup_jfrog # Give the step an ID to reference its outputs
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JFROG_URL: "https://andrewrjpd1.jfrog.io"
          ARTIFACTORY_DOCKER_REPO: "docker-local" 
        with:
          oidc-provider-name: github

      # 2. Setup Docker build environment
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to Artifactory Docker registry
      # Use the access token generated by the 'setup-jfrog-cli' step
      - name: Log in to Artifactory
        uses: docker/login-action@v3
        with:
          registry: ${{ env.JFROG_URL }}
          username: ${{ steps.setup_jfrog.outputs.oidc-user-name }}
          password: ${{ steps.setup_jfrog.outputs.oidc-access-token }}

      # 4. Build and tag your Docker image
      - name: Build and Tag Docker Image
        run: |
          docker build -t "${{ env.JFROG_URL }}/${{ env.ARTIFACTORY_DOCKER_REPO }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}" .

      # 5. Push the Docker image with JFrog CLI
      # This command pushes the image and records it as part of a build
      - name: Push Docker Image to Artifactory
        run: |
          jf rt docker-push "${{ env.JFROG_URL }}/${{ env.ARTIFACTORY_DOCKER_REPO }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}" ${{ env.ARTIFACTORY_DOCKER_REPO }} --build-name=${{ github.workflow }} --build-number=${{ github.run_number }}
          jf rt build-publish ${{ github.workflow }} ${{ github.run_number }}
